<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>标新取异项目</title>
    <link href="/2023/08/20/bz1/"/>
    <url>/2023/08/20/bz1/</url>
    
    <content type="html"><![CDATA[<h2 id="video"><a href="#video" class="headerlink" title="video"></a>video</h2><h3 id="数据库设计-暂行"><a href="#数据库设计-暂行" class="headerlink" title="数据库设计(暂行)"></a>数据库设计(暂行)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Course</span>(models.Model):<br>    <span class="hljs-string">&quot;&quot;&quot;课程类&quot;&quot;&quot;</span><br>    title = models.CharField(max_length=<span class="hljs-number">100</span>)<br>    description = models.TextField()<br>    created_at = models.DateTimeField(auto_now_add=<span class="hljs-literal">True</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.title<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Lesson</span>(models.Model):<br>    <span class="hljs-string">&quot;&quot;&quot;课程中的单节课类&quot;&quot;&quot;</span><br>    course = models.ForeignKey(Course, on_delete=models.CASCADE)<br>    title = models.CharField(max_length=<span class="hljs-number">100</span>)<br>    video = models.FileField(upload_to=<span class="hljs-string">&#x27;lessons/&#x27;</span>)<br>    sequence = models.PositiveIntegerField()  <span class="hljs-comment"># 正整数，课程中课的顺序</span><br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        ordering = [<span class="hljs-string">&#x27;sequence&#x27;</span>]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.title<br><br></code></pre></td></tr></table></figure><p>在这个设计中，我们新增了一个名为 <code>sequence</code> 的正整数字段来表示课程中每一节课的顺序。我们还在 <code>Meta</code> 类中使用 <code>ordering</code> 属性对 <code>Lesson</code> 模型的查询结果进行排序，以保证按照顺序返回课程。</p><p>当你创建新的 <code>Lesson</code> 对象时，请确保为 <code>sequence</code> 字段赋予适当的值，以确保课程的顺序是正确的。你可以使用合适的逻辑来管理和维护 <code>sequence</code> 字段的值。</p><p>通过这种方式，你可以在检索特定课程的所有课程时，按照顺序返回课程对象列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">python manage.py makemigrations  <br>python manage.py migrate <br></code></pre></td></tr></table></figure><h3 id="界面设计"><a href="#界面设计" class="headerlink" title="界面设计"></a>界面设计</h3><h4 id="一、iframe配置问题"><a href="#一、iframe配置问题" class="headerlink" title="一、iframe配置问题"></a>一、iframe配置问题</h4><p>要解决在 Django 项目中设置 ‘X-Frame-Options’ 导致的错误，你可以按照以下步骤进行配置：</p><ol><li>在你的 Django 项目的设置文件（<code>settings.py</code>）中找到 <code>MIDDLEWARE</code> 配置选项。它包含了一个中间件类列表，这些中间件按照顺序在请求和响应之间进行处理。</li><li>确保以下三个中间件类在 <code>MIDDLEWARE</code> 列表中存在，并且按照相应的顺序排列：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">MIDDLEWARE = [<br>    <span class="hljs-comment"># ...</span><br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,<br>    <span class="hljs-comment"># ...</span><br>]<br></code></pre></td></tr></table></figure><p><code>SecurityMiddleware</code> 和 <code>XFrameOptionsMiddleware</code> 是 Django 提供的中间件，用于处理安全相关的功能和 X-Frame-Options 设置。</p><ol><li>检查 <code>X_FRAME_OPTIONS</code> 设置是否存在，并确保其值为 <code>&#39;SAMEORIGIN&#39;</code>。在你的 <code>settings.py</code> 文件中添加或修改以下代码：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X_FRAME_OPTIONS = <span class="hljs-string">&#x27;SAMEORIGIN&#x27;</span><br></code></pre></td></tr></table></figure><p>这将确保 Django 在响应头中设置 <code>X-Frame-Options</code> 为 <code>&#39;SAMEORIGIN&#39;</code>，允许该网站在相同的 origin 下被嵌入到 <code>&lt;iframe&gt;</code> 中。</p><ol><li>保存并重启你的 Django 项目，然后再次尝试访问网站，看看是否仍然出现相同的错误。</li></ol><p>如果你依然遇到问题，确保你已经正确地配置了以上步骤，并检查 Django 版本是否支持该配置项。</p><p>请注意，修改 <code>X_FRAME_OPTIONS</code> 设置可能会影响网站的安全性，因此在修改设置之前，请确保你了解该设置可能带来的潜在风险，并根据具体情况进行设置。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>valine评论系统</title>
    <link href="/2023/08/19/valine/"/>
    <url>/2023/08/19/valine/</url>
    
    <content type="html"><![CDATA[<h2 id="valine评论系统"><a href="#valine评论系统" class="headerlink" title="valine评论系统"></a>valine评论系统</h2><ul><li><h3 id="Valine-opens-new-window-基于-LeanCloud"><a href="#Valine-opens-new-window-基于-LeanCloud" class="headerlink" title="Valine (opens new window):基于 LeanCloud"></a><strong><a href="https://valine.js.org/configuration.html">Valine (opens new window)</a>:基于 <a href="https://console.leancloud.cn/">LeanCloud</a></strong></h3></li></ul><h3 id="第一步：注册Leancloud"><a href="#第一步：注册Leancloud" class="headerlink" title="第一步：注册Leancloud"></a>第一步：注册Leancloud</h3><p><img src="/../img/valine/image-20230819222800671.png" alt="image-20230819222800671"></p><p>获取 AppID 和 AppKey</p><p><img src="/../img/valine/image-20230819222915512.png" alt="image-20230819222915512"></p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><p>Valine 诞生于2017年8月7日，是一款基于<a href="https://leancloud.cn/">LeanCloud</a>的快速、简洁且高效的无后端评论系统。</p><p>理论上支持但不限于静态博客，目前已有<a href="https://valine.js.org/hexo.html">Hexo</a>、<a href="https://valine.js.org/jekyll.html">Jekyll</a>、<a href="http://typecho.org/">Typecho</a>、<a href="https://gohugo.io/">Hugo</a>、<a href="https://ghost.org/">Ghost</a>、<a href="https://github.com/daidi/docsify-valine/">Docsify</a> 等博客和文档程序在使用Valine。</p><ul><li>快速</li><li>安全</li><li>Emoji 😉</li><li>无后端实现</li><li>MarkDown 全语法支持</li><li>轻量易用</li><li><a href="https://valine.js.org/visitor.html">文章阅读量统计</a> <code>v1.2.0+</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>valine</tag>
      
      <tag>评论</tag>
      
      <tag>随笔</tag>
      
      <tag>使用记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git常用命令</title>
    <link href="/2023/08/19/git/"/>
    <url>/2023/08/19/git/</url>
    
    <content type="html"><![CDATA[<h2 id="ssh免密登录"><a href="#ssh免密登录" class="headerlink" title="ssh免密登录"></a>ssh免密登录</h2><p><code> ssh-keygen</code>默认是存在<code>~/.ssh/id_rsa.pub</code></p><p><img src="/../img/git/image-20230819132527663.png" alt="image-20230819132527663"></p><p>然后把获取到的公钥注册到gitte</p><p><img src="/../img/git/image-20230819132346153.png" alt="image-20230819132346153"></p><h2 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h2><h3 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a><strong>建立连接</strong></h3><p>前面进行了ssh免密登录，此时选择git,而不要选择https</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">git init<br>git remote add origin git@....<br></code></pre></td></tr></table></figure><p>取消之前的链接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git remote remove origin<br></code></pre></td></tr></table></figure><h3 id="经常执行"><a href="#经常执行" class="headerlink" title="经常执行"></a><strong>经常执行</strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git add .<br>git commit -m <span class="hljs-string">&#x27;备注&#x27;</span><br>git push origin master<br></code></pre></td></tr></table></figure><h3 id="扒取"><a href="#扒取" class="headerlink" title="扒取"></a><strong>扒取</strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> git@gitee.com:....<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>常用命令</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo使用记录</title>
    <link href="/2023/08/18/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <url>/2023/08/18/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo使用记录"><a href="#Hexo使用记录" class="headerlink" title="Hexo使用记录"></a>Hexo使用记录</h2><h3 id="一、发表博文"><a href="#一、发表博文" class="headerlink" title="一、发表博文"></a><strong>一、发表博文</strong></h3><p><strong>1、新建博文</strong></p><p>打开terminal，cd到对应的文件夹，例如我是myblog，输入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">hexo new &#x27;文章题目&#x27;<br></code></pre></td></tr></table></figure><p><strong>2、新建页面</strong></p><p>输入这一句：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">hexo new page &#x27;页面名称&#x27;<br></code></pre></td></tr></table></figure><h3 id="二、博文配置"><a href="#二、博文配置" class="headerlink" title="二、博文配置"></a>二、博文配置</h3><p><strong>1、图片配置</strong></p><p><img src="/../img/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-20230818235019700.png" alt="image-20230818235019700"></p><p>博文中使用的图片需要提前准备到<code>source</code>文件夹中</p><p><strong>2、属性配置</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs markdown">title: Hexo使用记录                             <br><span class="hljs-section"># 博文的名称</span><br>date: 2023-08-18 23:28:02   <br><span class="hljs-section"># 博文的发布时间</span><br>index<span class="hljs-emphasis">_img: /img/第一篇文章/hexo.jpg              </span><br><span class="hljs-emphasis"># 首页博文的图片</span><br><span class="hljs-emphasis">author: 阿杰</span><br><span class="hljs-emphasis"># 博文的作者</span><br><span class="hljs-emphasis">categories:</span><br><span class="hljs-emphasis"># 博文的分类</span><br><span class="hljs-emphasis">- 随笔</span><br><span class="hljs-emphasis">tags:</span><br><span class="hljs-emphasis"># 博文的标签</span><br><span class="hljs-emphasis">layout: about</span><br><span class="hljs-emphasis"># 建议加上，不然很多样式不会显现</span><br><span class="hljs-emphasis">comment: true</span><br><span class="hljs-emphasis"># 用来控制评论的开关</span><br></code></pre></td></tr></table></figure><h3 id="三、部署与更新"><a href="#三、部署与更新" class="headerlink" title="三、部署与更新"></a>三、部署与更新</h3><p>要将Hexo博客部署到GitHub Pages上，你可以按照以下步骤进行操作：</p><ol><li>创建GitHub仓库：<ul><li>在GitHub上创建一个新的仓库，仓库名为<code>&lt;username&gt;.github.io</code>（其中<code>&lt;username&gt;</code>是你的GitHub用户名）。</li><li>选择“Public”（公开）选项，以使你的网站可以在互联网上访问。</li></ul></li><li>安装Hexo：<ul><li>确保你已经在本地安装了Node.js和Hexo。</li><li>使用命令提示符或终端进入你的Hexo项目的根目录。</li></ul></li><li>配置Hexo：<ul><li>打开Hexo项目的 <code>_config.yml</code> 文件，找到 <code>deploy</code> 部分。</li><li>设置 <code>type</code> 为 <code>git</code>。</li><li>设置 <code>repo</code> 为你在第1步中创建的仓库的URL地址，格式为 <code>https://github.com/&lt;username&gt;/&lt;username&gt;.github.io.git</code>。</li></ul></li><li>部署到GitHub Pages：<ul><li>运行以下命令将你的Hexo网站生成为静态文件：<code>hexo generate</code> 或 <code>hexo g</code>。</li><li>运行以下命令将生成的静态文件部署到GitHub Pages：<code>hexo deploy</code> 或 <code>hexo d</code>。</li></ul></li></ol><p>现在，你的Hexo博客网站已经部署到了GitHub Pages上。你可以通过访问 <code>https://&lt;username&gt;.github.io</code>（其中<code>&lt;username&gt;</code>是你的GitHub用户名）来查看你的网站。</p><p>记住，每次更新博客时，你需要运行 <code>hexo generate</code> 和 <code>hexo deploy</code> 命令来重新生成和部署你的网站。</p><h3 id="四、SEO优化"><a href="#四、SEO优化" class="headerlink" title="四、SEO优化"></a>四、SEO优化</h3><ol><li>修改博客标题和描述：<br>在 Hexo 项目根目录的 <code>_config.yml</code> 文件中，可以找到 <code>title</code> 和 <code>description</code> 字段，将其设置为你博客的标题和描述，这将显示在搜索引擎结果中。</li><li>添加网页关键字：<br>在 <code>_config.yml</code> 文件中，找到 <code>keywords</code> 字段，设置与你的博客内容相关的关键字，这有助于搜索引擎识别和索引你的内容。</li><li>生成友好的 URL：<br>在 <code>_config.yml</code> 文件中，找到 <code>permalink</code> 字段，设置为 <code>:year/:month/:day/:title/</code>，这将生成符合 SEO 要求的 URL。</li><li>优化文章标签和分类：<br>在 Hexo 发布的文章中，为每篇文章添加合适的标签和分类。这有助于搜索引擎和读者更好地了解你的内容结构。</li><li>生成 sitemap：<br>安装 Hexo 的 <code>hexo-generator-seo-friendly-sitemap</code> 插件，通过添加该插件到 Hexo 的配置文件中，可以生成网站地图，方便搜索引擎爬取和索引你的页面。</li><li>使用合适的标题标签（H1、H2、H3等）：<br>在博客文章中，使用适当的标题标记，比如用 H1 标签包裹文章标题，用 H2 和 H3 标签包裹子标题。这有助于搜索引擎理解你的内容结构。</li><li>添加 meta 标签：<br>可以使用 Hexo 插件 <code>hexo-meta-generator</code> 来自动生成 meta 标签，包括页面标题、描述、关键字等。这有助于搜索引擎抓取和索引你的页面。</li><li>使用友好的图片名和 alt 属性：<br>在使用图片时，使用描述性的文件名，并为每张图片添加合适的 alt 属性，这可以提高图片在搜索引擎中的可视性。</li></ol><h3 id="五、参考文档"><a href="#五、参考文档" class="headerlink" title="五、参考文档"></a>五、参考文档</h3><p><a href="https://github.com/fluid-dev/hexo-theme-fluid"><strong>Hexo Fluid 主题地址</strong></a></p><p><a href="https://hexo.fluid-dev.com/docs/"><strong>Hexo Fluid 用户手册</strong></a></p><p><a href="https://hunsh.net/"><strong>Hunsh’s Blog</strong></a></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>使用记录</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
